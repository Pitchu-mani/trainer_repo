Question to learn linux: 
    (path to qns: /notes/02-linux/probs/basics)
    (path to topics: /notes/02-linux/ [00-linux.txt, 01-linux.txt])
    01 mahesh with nayana for entire class 
    02 Ayisha (y,vbox),  Dhaheen (y/ubuntu), Sreya (y/ubuntu)              Evolution of Linux OS 
    03 [all others : 2nd task]
    04 Vishakh (y/ubuntu), Josh (y/wsl), Athira (y/vbox)               Linux Distributions
    05 Vinayak (y/wsl), Pitchumani (y/wsl), minhaj (y/wsl)         Features of Linux    
    06 Sana (n/ubuntu), Nayana (y/vbox), Sooraj (y/ubuntu)                 Linux Architecture + Linux Shell
    07 Nimisha (y/ubuntu), Bhagya (y/wsl), Abel (y/ubuntu)               Linux File System
    08 N/A, N.A, Venkatesh (y/vbox)                            Linux Architecture + Linux Shell
    09 [2nd task] Ayisha,  Dhaheen, Sreya
    10

    Participants mail ids:
Sana E, Nimisha K, Ayisha Dhiyana PS, S T Vishakh, Vinayak S Kaimal
Josh Danny Alex, Dhaheen Rahman, Nayana Haridas, Pitchumani S M, Bhagya S Kumar
Abel Mathew Simon, M Venkatesh,  Sooraj M V, Athira KS, Sreya K, minhaj 

Presenter     Questioner 
Ayisha      - Josh
Dhaheen     - Sreya
Sreya     - Vinayak
Vishakh     - Nayana
Josh     - Athira
Athira     - Vishakh
Vinayak     - Bhagya
Pitchumani     - Sooraj
minhaj     - Sana
Sana     - Dhaheen
Nayana     - Abel
Sooraj     - Venkatesh
Nimisha     - Pitchumani
Bhagya     - minhaj
Abel     - Ayisha
Venkatesh     - Nimisha


3 4 5 1 2
2 1 4 3 5
5 4 6 3 1 2
    Evolution of Linux OS 
    Linux Distributions 
    Features of Linux
    Linux Architecture + Linux Shell
    Linux File System


    3 tasks : 
        16 presentations. 
==========================================================================================================
c++ program : 
    movie ticket booking system 

movie_ticket.cpp 
1. compile and run movie_ticket.cpp 
    !!! Done 
2. modularize into multiple files 
    2.1 modularization : 3 sources, 2 headers 
    
    movie_ticket.cpp 
    
        ==> 
    11     
    |-- - Const.h 
        - BookingManager.h 
        - Menu.h 
        - BookingManager.cpp 
        - Menu.cpp 
        - Main.cpp 

    Const.h
        // Constants
        const int MAX_BOOKINGS = 100;
    Main.cpp 
        // system headers 
        #include "Const.h"  
        #include "BookingManger.h"
        #include "Menu.h"   
        // using ...
        // main code 

    Menu.h 
        void printMenu();
    Menu.cpp 
        #include "Menu.h"
        //Definition of "Menu.h"
        

    BookingManger.h 
        void createBooking(int booking_ids[], int ticket_amounts[], int food_amounts[], int &numBookings);
        void displayBookings(const int booking_ids[], const int ticket_amounts[], const int food_amounts[], int numBookings);
        int findBookingIndexById(const int booking_ids[], int numBookings, int id);
        void editBooking(int booking_ids[], int ticket_amounts[], int food_amounts[], int numBookings);
        void deleteBooking(int booking_ids[], int ticket_amounts[], int food_amounts[], int &numBookings);   

    BookingManager.cpp 
        #include "Const.h"
        #include "BookingManager.h"
        //Definitions of "BookingManager.h" 
    2.1 compilation 
        $ g++ -c BookingManager.cpp         # BookingManager.o 
        $ g++ -c Menu.cpp                   # Menu.o 
        $ g++ -c Main.cpp                   # Main.o 
            => OR $ g++ -c *.cpp            # Bookin ager.o Menu.o Main.o 
        $ g++ -o App.out *.o                # executable App.out

    |-- - Const.h 
        - BookingManager.h 
        - Menu.h 
        - BookingManager.cpp 
        - Menu.cpp 
        - Main.cpp 
    |-- -BookingManager.o
        - Menu.o
        - Main.o 
        - App.out 
    2.3 Running 
        $ ./App.out 

    After modifications and before compilation and build:
    -- remove object files and build (output) file before compilation and build: 
    $ rm *.o *.out 

3. go for the best practice 
    -- in short future, we will learn it.
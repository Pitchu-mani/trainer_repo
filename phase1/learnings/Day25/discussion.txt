overloading /01/main.cpp 
generic programming : template /02/main.cpp
=======================================================
double findSum(double arr[], int size) {
    double result = 0.0f;
    for(auto e : arr) {
        result = result + e;
    }
    return result;
}

==>

T findSum(T arr[], int size, T default_value) {
    T result = default_value;
    for(int I = 0; I < size; I++) {
        result = result + arr[I];
    }
    return result;
}


//usage 
int nums [4] = {2,3,5,6};
int nums_sum = findSum<int>(nums, 4, 0);

//usage 
float salaries [4] = {2.0f,3.0f,5.0f,6.0f};
float salaries_sum = findSum<float>(salaries, 4, 0.0f);
=======================================================


template <class T, 
int findProduct(float x, double y)